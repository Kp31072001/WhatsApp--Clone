{"version":3,"sources":["firebase.js","StateProvider.js","Chat.js","SidebarChat.js","Sidebar.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Chat","useState","seed","setSeed","input","setInput","roomId","useParams","roomName","setRoomName","messages","setMessages","user","useEffect","collection","doc","onSnapshot","snapshot","data","name","orderBy","docs","map","Math","floor","random","className","Avatar","src","Date","length","timestamp","toDate","toUTCString","IconButton","message","displayName","onChange","e","target","placeholder","type","onClick","preventDefault","console","log","add","FieldValue","serverTimestamp","SidebarChat","id","addNewChat","prompt","to","Sidebar","rooms","setRooms","unsubscribe","photoURL","room","actionType","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77a9c7bc.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nimport firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDeeTVsHAypVkYgcQyTpjbT2AuqttibofQ\",\n  authDomain: \"whatsapp-clone-kp-8964f.firebaseapp.com\",\n  projectId: \"whatsapp-clone-kp-8964f\",\n  storageBucket: \"whatsapp-clone-kp-8964f.appspot.com\",\n  messagingSenderId: \"633912931298\",\n  appId: \"1:633912931298:web:4230f64a6454695763bfbb\",\n  measurementId: \"G-SDV3C68P54\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider(); \n\nexport {auth, provider};\nexport default db;","import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer , initialState, children }) => (\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\n        {children}\n    </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);","import { Avatar, IconButton } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport \"./Chat.css\"\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport MicIcon from '@material-ui/icons/Mic';\nimport { useParams } from \"react-router-dom\";\nimport db from './firebase';\nimport firebase from \"firebase\";\nimport { useStateValue } from './StateProvider';\n\nfunction Chat() {\n\n    const [seed, setSeed] = useState(\"\");\n    const [input, setInput] = useState(\"\");\n    const { roomId } = useParams();\n    const [roomName, setRoomName] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const [{user}, dispatch] = useStateValue();\n\n    useEffect(() => {\n        if (roomId) {\n            db.collection(\"rooms\")\n            .doc(roomId)\n            .onSnapshot((snapshot) => setRoomName(snapshot.data().name));\n\n            db.collection('rooms')\n                .doc(roomId)\n                .collection(\"messages\")\n                .orderBy('timestamp', 'asc')\n                .onSnapshot((snapshot) => \n                setMessages(snapshot.docs.map((doc) => doc.data()))\n            );\n        }\n\n    }, [roomId]);\n     \n\n\n    useEffect(() => {\n        setSeed(Math.floor(Math.random()*5000));\n    \n     \n    }, [roomId]);\n\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n        console.log('You typed >>>', input);\n\n        db.collection('rooms').doc(roomId).collection('messages').add({\n            message: input,\n            name: user.displayName,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        })\n\n        setInput('');\n\n    }\n\n    return (\n        <div className=\"chat\">\n            <div className=\"chat_header\">\n                <Avatar src={`http://avatars.dicebear.com/api/human/${seed}.svg`} />\n\n                <div className=\"chat_headerInfo\">\n                    <h3>{roomName}</h3>\n                    <p>\n                        last seen{\" \"}\n                        {new Date(\n                            messages[messages.length - 1]?.\n                            timestamp?.toDate()\n                        ).toUTCString()}\n                    </p>\n                </div>\n\n                <div className=\"chat_headerRight\">\n                    <IconButton>\n                        <SearchOutlinedIcon />\n                    </IconButton>\n                    <IconButton>     \n                        <AttachFileIcon />                   \n                    </IconButton>\n                    <IconButton>\n                        <MoreVertIcon />\n                    </IconButton>  \n                </div>\n\n            </div>\n            <div className=\"chat_body\">\n                {messages.map((message) => (\n                    <p className={`chat_message ${message.name === user.displayName &&\n                \"chat_receiver\"}`}>\n                    <span className=\"chat_name\">{message.name}</span>\n                    {message.message}\n                    <span className=\"chat_timestamp\">\n                        {new Date(message.timestamp?.toDate()).toUTCString()}\n                    </span>\n                </p>\n                ))}\n                \n            </div>\n            <div className=\"chat_footer\">\n                <InsertEmoticonIcon />\n                <form>\n                    <input value={input} onChange={(e) => setInput(e.target.value)} placeholder=\"Type a message\" type=\"text\" />\n                    <button onClick={sendMessage} type=\"submit\" >Send message</button>\n                </form>\n                <MicIcon />\n            </div>\n        </div>\n    )\n}\n\nexport default Chat\n","import { Avatar } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport db from './firebase';\nimport \"./SidebarChat.css\"\nimport { Link } from \"react-router-dom\";\n\nfunction SidebarChat({ id, name, addNewChat }) {\n    const[seed, setSeed] = useState(\"\");\n    const [messages, setMessages] = useState(\"\");\n\n    useEffect(() => {\n        if (id) {\n            db.collection('rooms').doc(id).collection('messages').orderBy('timestamp', 'desc').onSnapshot((snapshot) => (\n                setMessages(snapshot.docs.map((doc) => doc.data()))\n            ));\n        }\n    }, [id])\n\n    useEffect(() => {\n        setSeed(Math.floor(Math.random()*5000));\n    \n     \n    }, []);\n\n    const createChat = () => {\n        const roomName = prompt(\"Please enter name for chat\");\n\n        if (roomName) {\n            //hitting into db from front end\n            db.collection('rooms').add({\n                name: roomName,\n            })\n        }\n    };\n\n    return !addNewChat ? (\n        <Link to={`/rooms/${id}`}>\n            <div className=\"sidebarChat\">\n                <Avatar src={`http://avatars.dicebear.com/api/human/${seed}.svg`} />\n\n                <div className=\"sidebarChat_info\">\n                    <h2>{name}</h2>\n                    <p>{messages[0]?.message}</p>\n                </div>\n            </div>\n        </Link>\n        \n    ) : (\n        <div onClick={createChat} \n        className=\"sidebarChat\">\n            <h2>add new chat</h2>\n        </div>\n    );\n}\n\nexport default SidebarChat\n","import React, { useEffect, useState } from 'react'\nimport \"./Sidebar.css\"\nimport {Avatar, IconButton} from \"@material-ui/core\"\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\nimport SidebarChat from './SidebarChat';\nimport db from './firebase';\nimport { useStateValue } from './StateProvider';\n\n\nfunction Sidebar() {\n\n    const [rooms, setRooms] = useState([]);\n    const [{ user }, dispatch] = useStateValue();\n\n    useEffect(() => {\n        const unsubscribe = db.collection('rooms').onSnapshot((snapshot) => {\n                setRooms(snapshot.docs.map(doc => ({\n                    id: doc.id,\n                    data: doc.data(),\n                })))\n            }\n            );\n        return () => {\n            unsubscribe();\n        }\n    }, [])\n\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar_header\">\n                <Avatar src={user?.photoURL} />\n                <div className=\"sidebar_headerRight\">\n                    <IconButton>\n                        <DonutLargeIcon />\n                    </IconButton>\n                    <IconButton>                        \n                        <MoreVertIcon />\n                    </IconButton>\n                    <IconButton>\n                        <ChatIcon />\n                    </IconButton>               \n\n\n                </div>\n\n            </div>\n            <div className=\"sidebar_search\">\n                <div className=\"sidebar_searchContainer\">\n                    <SearchOutlinedIcon />\n                    <input placeholder=\"Search or start new chat\" type=\"text\"></input>\n                </div>\n\n            </div>\n            <div className=\"sidebar_chats\">\n                <SidebarChat addNewChat />\n                {rooms.map(room => (\n                    <SidebarChat key={room.id} id={room.id} name={room.data.name} />\n                ))}\n\n\n\n\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Sidebar\n","export const initialState = {\n    user: null,\n};\n\nexport const actionType = {\n    SET_USER: \"SET_USER\",\n};\n\nconst reducer = (state, action) => {\n    console.log(action);\n    switch (action.type) {\n        case actionType.SET_USER:\n            return {\n                ...state,\n                user: action.user,\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import React from 'react'\nimport \"./Login.css\"\nimport { Button } from \"@material-ui/core\"\nimport { auth, provider } from './firebase'\nimport { actionType } from './reducer';\nimport {useStateValue} from \"./StateProvider\"\n\n\nfunction Login() {\n\n    const [{}, dispatch] = useStateValue();\n\n    const signIn = () => {\n        auth.signInWithPopup(provider)\n        .then(result => {\n            dispatch({\n                type: actionType.SET_USER,\n                user: result.user,\n            })\n        })\n        .catch(error => alert(error.message)) ;\n    }; \n\n    return (\n        <div className=\"login\">\n            <div className=\"login_container\">\n                <img src=\"https://www.freeiconspng.com/thumbs/logo-whatsapp-png/logo-whatsapp-transparent-background-22.png\" alt=\"\" />\n                <div className=\"login_text\">\n                    <h1>Sign in to Whatsapp</h1>\n                </div>\n                <Button onClick={signIn} >Sign In With Google</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Login \n","import React, { useState } from \"react\"\nimport './App.css';\nimport Chat from \"./Chat\";\nimport Sidebar from \"./Sidebar\";\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Login from \"./Login\";\nimport { useStateValue } from \"./StateProvider\";\n\n\nfunction App() {\n\n  const [{ user }, dispatch] = useStateValue(); \n\n  return (\n    <div className=\"app\">\n      \n\n    {!user ? (\n      <Login />\n    ) : (\n       <div className=\"app_body\">\n      <Router>\n        <Sidebar /> \n\n        <Switch >\n          <Route path=\"/rooms/:roomId\">\n            <Chat />\n          </Route>\n          <Route path=\"/\">\n\n            {/* <Chat /> */}\n          </Route>\n          \n        </Switch>\n      </Router>  \n\n\n      </div>\n    )}\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { StateProvider } from './StateProvider';\nimport reducer, { initialState } from \"./reducer\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState = {initialState}\n    reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}